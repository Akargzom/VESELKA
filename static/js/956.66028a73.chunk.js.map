{"version":3,"file":"static/js/956.66028a73.chunk.js","mappings":"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","sources":["webpack://raduga_2.0/./src/components/Prog-B/Prog.module.css?aadb","components/Prog-B/Prog.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"prog\":\"Prog_prog__MMO0P\",\"fadeIn\":\"Prog_fadeIn__iG1SJ\",\"text\":\"Prog_text__gfIZQ\",\"timer\":\"Prog_timer__m+fou\",\"small\":\"Prog_small__L0jzj\",\"tabGroup\":\"Prog_tabGroup__Z79x1\",\"tabs\":\"Prog_tabs__r36yV\",\"tab\":\"Prog_tab__8EhCD\",\"selects\":\"Prog_selects__4jdfN\"};","import React, { useEffect, useState } from \"react\"\r\nimport classes from './Prog.module.css'\r\nimport { AppDispatch } from \"../../types/types\"\r\nimport moment from \"moment\"\r\nimport 'moment-timezone'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { InitialProg, actions, requestB, setKat, setPrgPng, setSkip, setWhenB } from \"../../redux/progReducer\"\r\nimport { getCounter, getProg } from \"../../redux/selectors\"\r\nimport cantWait from '../../assets/cant_wait_07.jpg'\r\nimport def from '../../assets/image_1.jpg'\r\nimport ng from '../../assets/image_new_year.jpg'\r\nconst Timer: React.FC<{ whenB: string }> = ({ whenB }) => {\r\n    const [hours, setHours] = useState(() => 0),\r\n        [minutes, setMinutes] = useState(() => 0),\r\n        [seconds, setSeconds] = useState(() => 0),\r\n        addZero = (num: number): string | number => {\r\n            if (num <= 9) {\r\n                return '0' + num;\r\n            } else return num;\r\n        },\r\n        getTime = (whenB: string) => {\r\n            const time = moment(whenB).diff(moment().tz(\"Europe/Kiev\"))\r\n            setHours(Math.floor((time / (1000 * 60 * 60))))\r\n            setMinutes(Math.floor(time / 1000 / 60 % 60))\r\n            setSeconds(Math.floor(time / 1000 % 60))\r\n        }\r\n    useEffect(() => {\r\n        getTime(whenB)\r\n    }, [])\r\n    useEffect(() => {\r\n        const interval = setInterval(() => getTime(whenB), 1000)\r\n        return () => clearInterval(interval)\r\n    }, [whenB]);\r\n    return (\r\n        <div className={classes.timer}>\r\n            <h1 className={classes.text}>Прибуття на бе {seconds >= 0 && minutes >= 0 && hours >= 0 ? <span >очікується через: {addZero(hours)}:{addZero(minutes)}:{addZero(seconds)}</span> : <span>не очікується</span>}</h1>\r\n        </div>\r\n    )\r\n},\r\n    Prog: React.FC = () => {\r\n        const [katIsOpen, setKatIsOpen] = useState(false),\r\n            [skipIsOpen, setSkipIsOpen] = useState(false),\r\n            [whenIsOpen, setWhenIsOpen] = useState(false),\r\n            [day, setDay] = useState(() => 0),\r\n            [hour, setHour] = useState(() => 21),\r\n            dispatch: AppDispatch = useDispatch(),\r\n            state = useSelector(getProg),\r\n            timezone = useSelector(getCounter).timezone,\r\n            katarsis = () => {\r\n                if (!katIsOpen) {\r\n                    setKatIsOpen(true)\r\n                    setWhenIsOpen(false)\r\n                    setSkipIsOpen(false)\r\n                }\r\n                moment.tz.add(timezone)\r\n                let newKat = state.katarsis[Math.floor(Math.random() * state.katarsis.length)]\r\n                dispatch(setKat(newKat))\r\n            },\r\n            skipidar = () => {\r\n                let newSkip,\r\n                    prgPng\r\n                if (!skipIsOpen) {\r\n                    setKatIsOpen(false)\r\n                    setWhenIsOpen(false)\r\n                    setSkipIsOpen(true)\r\n                }\r\n                newSkip = state.skipidar[Math.floor(Math.random() * state.skipidar.length)]\r\n                prgPng = state.prgPngMass[Math.floor(Math.random() * state.prgPngMass.length)]\r\n                dispatch(setSkip(newSkip))\r\n                dispatch(setPrgPng(prgPng))\r\n            },\r\n            clearSkip = () => {\r\n                let newSkip = ''\r\n                dispatch(setSkip(newSkip))\r\n                setSkipIsOpen(false)\r\n            },\r\n            daySelect = (e: React.ChangeEvent<HTMLSelectElement>) => setDay(parseInt(e.target.value)),\r\n            hourSelect = (e: React.ChangeEvent<HTMLSelectElement>) => setHour(parseInt(e.target.value))\r\n        let whenBActual = moment().tz(\"Europe/Kiev\").add(+day, 'days').format('YYYY-MM-DD') + \" \" + hour + \":00\"\r\n        const setB = () => {\r\n            setWhenIsOpen(!whenIsOpen)\r\n            dispatch(setWhenB(whenBActual))\r\n        }\r\n        useEffect(()=>{\r\n            dispatch(InitialProg())\r\n            setInterval(() => requestB().then((r) => {\r\n                if (r !== state.whenB) {\r\n                  dispatch(actions.setWhenB(r))\r\n                }\r\n              }), 10000)\r\n        },[])\r\n        useEffect(() => {\r\n            if (day === 1) {\r\n                document.body.style.backgroundImage = 'url(' + cantWait + ')'\r\n            }\r\n            return () => {\r\n                if (moment().isBefore('2024-15-01', 'day') && moment().isAfter('2023-20-12', 'day')) {\r\n                    document.body.style.backgroundImage = 'url(' + ng + ')'\r\n                } else {\r\n                    document.body.style.backgroundImage = 'url(' + def + ')'\r\n                }\r\n            }\r\n        }, [day])\r\n        return (\r\n            <div className={classes.prog}>\r\n                <Timer whenB={state.whenB} />\r\n                <h2 className={classes.text}>Сьогодні ти: <div>{state.kat}</div>{state.skip && <div>{state.skip}</div>}</h2>\r\n                {state.skip && <button onClick={clearSkip}>Прибрати скіпідар</button>}\r\n                <div className={classes.tabs}>\r\n                    <div className={classes.tabGroup}>\r\n                        <button onClick={katarsis} className={classes.kat}>{katIsOpen ? 'Більше катарсіса!' : 'Отримати катарсіс!'}</button>\r\n                        <div className={classes.tab} style={katIsOpen ? { display: 'block' } : { display: 'none' }}>\r\n                            <div className={classes.text}>Сьогодні ти {state.kat}!</div>\r\n                            <button className={classes.small} onClick={() => setKatIsOpen(!katIsOpen)}>Чудово!</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.tabGroup}>\r\n                        <button onClick={skipidar} className={classes.skip}>{skipIsOpen ? 'Більше скипідара!' : 'Отримати скіпідар!'}</button>\r\n                        <div className={classes.tab} style={skipIsOpen ? { background: 'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(' + state.prgPng + ')', display: 'block' } : { background: 'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(' + state.prgPng + ')', display: 'none' }}>\r\n                            <div className={classes.text}>Сьогодні ти {state.skip}!</div>\r\n                            <button className={classes.small} onClick={() => setSkipIsOpen(!skipIsOpen)}>Чудово!</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.tabGroup}>\r\n                        <button onClick={() => { if (!whenIsOpen) { setWhenIsOpen(true); setSkipIsOpen(false); setKatIsOpen(false) } }} className={classes.whenB}>Бе, повільно...</button>\r\n                        <div className={classes.tab} style={whenIsOpen ? { display: 'block' } : { display: 'none' }}>\r\n                            <div className={classes.text} >Наскільки повільно?</div>\r\n                            <div className={classes.selects}>\r\n                                <select value={day} onChange={daySelect}>\r\n                                    <option value=\"0\" >сьогодні</option>\r\n                                    <option value=\"1\" >завтра</option>\r\n                                </select>\r\n                                <select value={hour} onChange={hourSelect}>\r\n                                    <option value=\"21\" >21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                </select>\r\n                            </div>\r\n                            <button className={classes.small} onClick={setB}>Потихеньку...</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\nexport default Prog"],"names":["Timer","_ref","whenB","_useState","useState","_useState2","_slicedToArray","hours","setHours","_useState3","_useState4","minutes","setMinutes","_useState5","_useState6","seconds","setSeconds","addZero","num","getTime","time","moment","diff","tz","Math","floor","useEffect","interval","setInterval","clearInterval","_jsx","className","classes","children","_jsxs","_useState7","_useState8","katIsOpen","setKatIsOpen","_useState9","_useState10","skipIsOpen","setSkipIsOpen","_useState11","_useState12","whenIsOpen","setWhenIsOpen","_useState13","_useState14","day","setDay","_useState15","_useState16","hour","setHour","dispatch","useDispatch","state","useSelector","getProg","timezone","getCounter","whenBActual","add","format","InitialProg","requestB","then","r","actions","document","body","style","backgroundImage","cantWait","isBefore","isAfter","ng","def","kat","skip","onClick","setSkip","newKat","katarsis","random","length","setKat","display","newSkip","prgPng","skipidar","prgPngMass","setPrgPng","background","value","onChange","e","parseInt","target","setWhenB"],"sourceRoot":""}